<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salary Predictor</title>
    <!-- Use the Inter font from Google Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
    <!-- Include Tailwind CSS via CDN for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            bclc
            rackground-color: #f3f4f6;
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">

    <!-- Main container for the form and result -->
    <div class="bg-white p-8 rounded-2xl shadow-xl w-full max-w-md border border-gray-200">
        <h1 class="text-3xl font-bold text-gray-800 text-center mb-6">Salary Predictor</h1>
        <p class="text-center text-gray-600 mb-8">
            Enter the years of experience to predict the salary.
        </p>

        <!-- The prediction form -->
        <form id="prediction-form" class="space-y-6">
            <!-- Input field for years of experience -->
            <div>
                <label for="experience" class="block text-sm font-medium text-gray-700 mb-1">
                    Years of Experience:
                </label>
                <input type="number" id="experience" name="experience" min="0" step="0.1" required
                       class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition duration-150 ease-in-out">
            </div>

            <!-- Predict button -->
            <button type="submit"
                    class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-150 ease-in-out">
                Predict Salary
            </button>
        </form>

        <!-- Result display area -->
        <div id="result-container" class="mt-8 pt-6 border-t border-gray-200 hidden">
            <h2 class="text-xl font-semibold text-gray-700 mb-3">Predicted Salary:</h2>
            <p id="prediction-result" class="text-2xl font-bold text-green-600 text-center">
                <!-- The predicted salary will be displayed here -->
            </p>
        </div>

        <!-- Message box for errors or loading -->
        <div id="message-box" class="mt-4 hidden p-4 rounded-md text-sm" role="alert">
            <p id="message-text"></p>
        </div>

    </div>

    <!-- JavaScript to handle the form submission and API call -->
    <script>
        const form = document.getElementById('prediction-form');
        const resultContainer = document.getElementById('result-container');
        const predictionResult = document.getElementById('prediction-result');
        const messageBox = document.getElementById('message-box');
        const messageText = document.getElementById('message-text');

        // Function to show a temporary message
        function showMessage(text, type = 'info') {
            messageBox.classList.remove('hidden', 'bg-red-100', 'text-red-700', 'bg-green-100', 'text-green-700', 'bg-blue-100', 'text-blue-700');
            messageBox.classList.add('block');
            messageText.textContent = text;
            if (type === 'error') {
                messageBox.classList.add('bg-red-100', 'text-red-700');
            } else if (type === 'success') {
                messageBox.classList.add('bg-green-100', 'text-green-700');
            } else { // info
                messageBox.classList.add('bg-blue-100', 'text-blue-700');
            }
        }

        // Function to hide the message box
        function hideMessage() {
            messageBox.classList.add('hidden');
        }

        form.addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent the default form submission
            hideMessage(); // Hide any previous messages
            resultContainer.classList.add('hidden'); // Hide the result container

            const experience = document.getElementById('experience').value;

            if (!experience) {
                showMessage("Please enter a value for years of experience.", "error");
                return;
            }

            showMessage("Predicting...", "info");

            try {
                // Make a POST request to the Flask server's /predict endpoint
                const response = await fetch('/predict', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ experience: parseFloat(experience) }) // Send the experience value as JSON
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

                // Display the predicted salary
                predictionResult.textContent = `$${Math.round(data.prediction).toLocaleString()}`;
                resultContainer.classList.remove('hidden');
                hideMessage();

            } catch (error) {
                console.error('Error:', error);
                showMessage("Prediction failed. Please try again.", "error");
            }
        });
    </script>
</body>
</html>
